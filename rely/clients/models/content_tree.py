# generated by datamodel-codegen:
#   filename:  content_tree.json
#   timestamp: 2025-10-17T00:14:38+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import AnyUrl, BaseModel, Field, ConfigDict


class FieldLinks(BaseModel):
    git: Optional[AnyUrl]
    html: Optional[AnyUrl]
    self: AnyUrl


class Entry(BaseModel):
    model_config = ConfigDict(serialize_by_alias=True)

    type: str
    size: int
    name: str
    path: str
    sha: str
    url: AnyUrl
    git_url: Optional[AnyUrl]
    html_url: Optional[AnyUrl]
    download_url: Optional[AnyUrl]
    field_links: FieldLinks = Field(..., alias="_links")


class ContentTree(BaseModel):
    model_config = ConfigDict(serialize_by_alias=True)

    type: str
    size: int
    name: str
    path: str
    sha: str
    content: Optional[str] = None
    url: AnyUrl
    git_url: Optional[AnyUrl]
    html_url: Optional[AnyUrl]
    download_url: Optional[AnyUrl]
    entries: Optional[List[Entry]] = None
    encoding: Optional[str] = None
    field_links: FieldLinks = Field(..., alias="_links")
